/* 
 * Stardust API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2023-02-22T22:32:07Z
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using SwaggerDateConverter = Stardust.CoreSDK.Client.SwaggerDateConverter;

namespace Stardust.CoreSDK.Model
{
    /// <summary>
    /// This is the data output json model
    /// </summary>
    [DataContract]
        public partial class SDPlayerWalletGetResponse :  IEquatable<SDPlayerWalletGetResponse>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SDPlayerWalletGetResponse" /> class.
        /// </summary>
        /// <param name="wallet">An array of player wallets on the blockchain (required).</param>
        public SDPlayerWalletGetResponse(List<SDPlayerWalletGetResponseWallet> wallet = default(List<SDPlayerWalletGetResponseWallet>))
        {
            // to ensure "wallet" is required (not null)
            if (wallet == null)
            {
                throw new InvalidDataException("wallet is a required property for SDPlayerWalletGetResponse and cannot be null");
            }
            else
            {
                this.Wallet = wallet;
            }
        }
        
        /// <summary>
        /// An array of player wallets on the blockchain
        /// </summary>
        /// <value>An array of player wallets on the blockchain</value>
        [DataMember(Name="wallet", EmitDefaultValue=false)]
        public List<SDPlayerWalletGetResponseWallet> Wallet { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class SDPlayerWalletGetResponse {\n");
            sb.Append("  Wallet: ").Append(Wallet).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as SDPlayerWalletGetResponse);
        }

        /// <summary>
        /// Returns true if SDPlayerWalletGetResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of SDPlayerWalletGetResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(SDPlayerWalletGetResponse input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Wallet == input.Wallet ||
                    this.Wallet != null &&
                    input.Wallet != null &&
                    this.Wallet.SequenceEqual(input.Wallet)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Wallet != null)
                    hashCode = hashCode * 59 + this.Wallet.GetHashCode();
                return hashCode;
            }
        }
    }
}
